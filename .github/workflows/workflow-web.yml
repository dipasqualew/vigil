name: Web

on:
  workflow_call:

env:
  PACKAGE_ROOT: ./packages/web

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17'
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2.3.0
        with:
          version: 9
          run_install: true

      - run: pnpm install --filter web

      - run: pnpm run lint:eslint
        working-directory: packages/web

      - run: pnpm run lint:tsc
        working-directory: packages/web

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/main') && 'prod' || 'staging' }}
    env:
      VERCEL_ORG_ID: ${{ secrets.WEBSERVICE__VERCEL_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.WEBSERVICE__VERCEL_PROJECT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VITE_WEBSERVICE__SENTRYDSN: ${{ secrets.WEBSERVICE__SENTRYDSN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17'
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2.3.0
        with:
          version: 9
          run_install: true

      - run: pnpm install --filter web

      - name: Pull Vercel Environment Information
        working-directory: ${{ env.PACKAGE_ROOT }}
        run: npx vercel pull --yes --environment=$TARGET_ENVIRONMENT --token=${{ secrets.WEBSERVICE__VERCEL_TOKEN }}
        env:
          TARGET_ENVIRONMENT: ${{ (github.ref == 'refs/heads/main') && 'production' || 'preview' }}

      - name: Build Project Artifacts
        working-directory: ${{ env.PACKAGE_ROOT }}
        run: npx vercel build $BUILD_FLAGS --token=${{ secrets.WEBSERVICE__VERCEL_TOKEN }}
        env:
          BUILD_FLAGS: ${{ (github.ref == 'refs/heads/main') && '--prod' || '' }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: ${{ env.PACKAGE_ROOT }}
        id: deploy-preview
        run: |
          npx vercel deploy --prebuilt --token=${{ secrets.WEBSERVICE__VERCEL_TOKEN }} $DEPLOY_FLAGS > vercel-domain.txt
          echo "VERCEL_DEPLOYMENT_URL=$(cat vercel-domain.txt)" >> $GITHUB_OUTPUT
          echo "# Preview URL" >> $GITHUB_STEP_SUMMARY
          echo "$(cat vercel-domain.txt)" >> $GITHUB_STEP_SUMMARY
          echo "::notice title=Preview URL::$(cat vercel-domain.txt)"
        env:
          DEPLOY_FLAGS: ${{ (github.ref == 'refs/heads/main') && '--prod' || '' }}

    outputs:
      VERCEL_DEPLOYMENT_URL: ${{ steps.deploy-preview.outputs.VERCEL_DEPLOYMENT_URL }}

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [test, deploy]
    environment:
      name: ${{ (github.ref == 'refs/heads/main') && 'prod' || 'staging' }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17'
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2.3.0
        with:
          version: 9
          run_install: true

      - run: pnpm install --filter e2e-web

      - run: npx playwright install --with-deps
        working-directory: ./packages/e2e-web

      - run: npx playwright test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          WEBAPP_URL: ${{ needs.deploy.outputs.VERCEL_DEPLOYMENT_URL }}
        working-directory: ./packages/e2e-web

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: staging__playwright__test_results
          path: ./.cache/e2e-web/test-results
          include-hidden-files: true
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: staging__playwright__html_report
          path: ./.cache/e2e-web/html-report
          retention-days: 30
